
maxColumn = 120

continuationIndent {
  callSite = 2
  defnSite = 2
  extendSite = 4
}

assumeStandardLibraryStripMargin = true

danglingParentheses = true

docstrings = "JavaDoc"

lineEndings = "unix"

includeCurlyBraceInSelectChains = true

verticalMultilineAtDefinitionSite = true

align {
  tokens = [
    { code = "=>", owner = "Case" }, // Ascii =>
    { code = "⇒", owner = "Case" }, // Unicode ⇒
    ":",
    "%",
    "%%",
    "←",
    "<-",
    "→",
    "->",
    "=",
    ":=",
    "+=",
    "extends"
  ]

  arrowEnumeratorGenerator = true

  openParenCallSite = false

  openParenDefnSite = false

  ifWhileOpenParen = true
}

newlines {
  alwaysBeforeTopLevelStatements = true

  sometimesBeforeColonInMethodReturnType = true

  penalizeSingleSelectMultiArgList = false

  alwaysBeforeElseAfterCurlyIf = false

  afterImplicitKWInVerticalMultiline = false

  beforeImplicitKWInVerticalMultiline = true

  neverInResultType = false

  afterCurlyLambda = "never"

  neverBeforeJsNative = false

  alwaysBeforeCurlyBraceLambdaParams = false
}

spaces {
  neverAroundInfixTypes = []

  beforeContextBoundColon = "Never"

  inByNameTypes = true

  afterTripleEquals = true

  afterKeywordBeforeParen = true

  inImportCurlyBraces = true

  inParentheses = false

  afterKeywordBeforeParen = true
}

binPack {
  parentConstructors = true

  literalArgumentLists = true
}

optIn {
  breaksInsideChains = true
  selfAnnotationNewline = true
  annotationNewlines = true
  breakChainOnFirstMethodDot = true
  configStyleArguments = true
}

rewrite {
  rules = [
    "RedundantBraces",
    "RedundantParens",
    "SortImports",
    "PreferCurlyFors"
  ]

  redundantBraces {
    maxLines = 100
    includeUnitMethods = true
    stringInterpolation = true
  }
}

rewriteTokens = {
  "=>": "⇒"
  "->": "→"
  "<-": "←"
}